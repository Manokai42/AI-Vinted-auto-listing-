{\n  "github.copilot.chat.codeGeneration.instructions": [\n    { "text": "Always use the latest and best practices for the relevant programming language and framework." },\n    { "text": "Write clean, readable, and maintainable code with consistent formatting." },\n    { "text": "Add comments to explain complex logic and non-obvious decisions." },\n    { "text": "Use TypeScript for all code suggestions where applicable." },\n    { "text": "Always use React functional components for frontend development." },\n    { "text": "Follow the Airbnb JavaScript Style Guide for JavaScript/TypeScript code." },\n    { "text": "Follow the PEP 8 Style Guide for Python code." },\n    { "text": "Automatically complete code snippets and functions based on context." },\n    { "text": "Suggest improvements to existing code, including refactoring and optimization." },\n    { "text": "Generate unit tests for new and modified code." },\n    { "text": "Ensure all code adheres to the project's coding standards and best practices." },\n    { "text": "Automatically review code changes for potential bugs, security vulnerabilities, and performance issues." },\n    { "text": "Provide detailed feedback on code quality and suggest improvements." },\n    { "text": "Highlight areas of the code that need further attention or documentation." },\n    { "text": "Auto-save changes to the file every 5 seconds." },\n    { "text": "Auto-add changes to the staging area when a file is saved." },\n    { "text": "Auto-commit changes with a descriptive commit message when a file is saved." },\n    { "text": "Commit messages should follow the conventional commit format (e.g., , , )." },\n    { "text": "Auto-push changes to the default branch or the branch you are currently working on when a commit is made." },\n    { "text": "Ensure all changes are pushed to the remote repository to keep it up-to-date." },\n    { "text": "Handle merge conflicts by suggesting the best resolution based on context." },\n    { "text": "Automatically create pull requests for new features or significant changes." },\n    { "text": "Ensure all changes are reviewed and approved before merging to the main branch." },\n    { "text": "Use GitFlow or Trunk-Based Development as per the project's workflow." },\n    { "text": "Automatically update dependencies and run tests before committing." },\n    { "text": "Generate and update documentation for new and modified code." }\n  ]\n}
