name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.2.0
        with:
          node-version: '16'  # Set the Node.js version you want to use
          always-auth: false  # Set other options as needed
          cache: 'npm'  # Example of setting cache option
          cache-dependency-path: 'package-lock.json'  # Example of setting dependency path

      - name: Install dependencies
        run: npm install
        working-directory: ./app  # Update this path to the correct directory

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4 requests
        working-directory: ./path-to-your-python-scripts  # Ensure this path is correct

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run ESLint
        run: npm run lint
        working-directory: ./app  # Ensure this path is correct

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build the project
        run: npm run build
        working-directory: ./app  # Ensure this path is correct

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests
        run: npm test
        working-directory: ./app  # Ensure this path is correct

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  scrape:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run web scraping script
        run: python free_ai_setup.py
        working-directory: ./path-to-your-python-scripts  # Ensure this path is correct

      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
